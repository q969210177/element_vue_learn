{"remainingRequest":"E:\\vue\\c_vue\\node_modules\\babel-loader\\lib\\index.js!E:\\vue\\c_vue\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\vue\\c_vue\\src\\views\\login\\login.js?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\c_vue\\src\\views\\login\\login.js","mtime":1575981026702},{"path":"E:\\vue\\c_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\c_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue\\c_vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGUudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgQXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgcXMgZnJvbSAicXMiOyAvLyBpbXBvcnQgeyBsb2cgfSBmcm9tICJ1dGlsIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgLy9sZXQgdXNlclZlcmkgPSBmdW5jdGlvbihydWxlLHZhbHVlLGNhbGxiYWNrKSB7fTsKICAgIHJldHVybiB7CiAgICAgIGxvZ2luRm9ybTogewogICAgICAgIHVzZXJOYW1lOiAiYWRtaW4iLAogICAgICAgIHBhc3NXb3JkOiAiYWRtaW4iCiAgICAgIH0sCiAgICAgIGxvZ2luRm9ybVJ1bGVzOiB7CiAgICAgICAgdXNlck5hbWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXnlKjmiLflkI0iLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfSwgewogICAgICAgICAgbWluOiA0LAogICAgICAgICAgbWF4OiAxNiwKICAgICAgICAgIG1lc3NhZ2U6ICLplb/luqblnKggMyDliLAgMTYg5Liq5a2X56ymIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH1dLAogICAgICAgIHBhc3NXb3JkOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAi6K+36L6T5YWl5a+G56CBIiwKICAgICAgICAgIHRyaWdnZXI6ICJibHVyIgogICAgICAgIH0sIHsKICAgICAgICAgIG1pbjogMywKICAgICAgICAgIG1heDogMTYsCiAgICAgICAgICBtZXNzYWdlOiAi6ZW/5bqm5ZyoIDMg5YiwIDE2IOS4quWtl+espiIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciB0b2tlbiA9ICIiICsgbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICB0b2tlbiA9IHRva2VuLnNwbGl0KCIiKTsKICAgIHRva2VuLnNwbGljZSg1LCAxLCAieCIpOwogICAgdG9rZW4gPSB0b2tlbi5qb2luKCIiKTsgLy8gICAgIHZhciBhID0gJ2FzZGZzZGZzZGZzYWRmJzsKICAgIC8vIGE9YS5zcGxpdCgnJynvvJsgIC8v5bCGYeWtl+espuS4sui9rOaNouaIkOaVsOe7hAogICAgLy8gYS5zcGxpY2UoMSwxLCd4eHh4eCcp77ybIC8v5bCGMei/meS4quS9jee9rueahOWtl+espu+8jOabv+aNouaIkCd4eHh4eCcuIOeUqOeahOaYr+WOn+eUn2pz55qEc3BsaWNl5pa55rOV44CCCiAgICAvLyBjb25zb2xlLmxvZyhhKTsgICAvL+e7k+aenOaYr++8mgogICAgLy8gWyJhIiwgInh4eHh4IiwgImQiLCAiZiIsICJzIiwgImQiLCAiZiIsICJzIiwgImQiLCAiZiIsICJzIiwgImEiLCAiZCIsICJmIl0KICAgIC8vIGEuam9pbignJyk7ICAvL+WwhuaVsOe7hOi9rOaNouaIkOWtl+espuS4suOAgiAg5a6M5oiQ44CCCiAgfSwKICBtZXRob2RzOiB7CiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oZm9ybU5hbWUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgdmFyIHVzZXIgPSBxcy5zdHJpbmdpZnkoewogICAgICAgICAgICB1c2VyOiBfdGhpcy5sb2dpbkZvcm0udXNlck5hbWUKICAgICAgICAgIH0pOwogICAgICAgICAgQXhpb3MoewogICAgICAgICAgICBtZXRob2Q6ICJwb3N0IiwKICAgICAgICAgICAgdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8vcGhwL2xvZ2luL2xvZ2luLnBocCIsCiAgICAgICAgICAgIGRhdGE6IHVzZXIKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBpZiAocmVzLmRhdGEgPT09IDQwNCkgewogICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICLmsqHmnInms6jlhoznmoTnlKjmiLciLAogICAgICAgICAgICAgICAgdHlwZTogIndhcm5pbmciCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdmFyIHRva2VuID0gIiIgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKSArIHJlcy5kYXRhLm51bTsKICAgICAgICAgICAgICB0b2tlbiA9IHRva2VuLnNwbGl0KCIiKTsKCiAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbi5sZW5ndGggLSAxOyBpKyspIHsKICAgICAgICAgICAgICAgIC8vIOWmguaenOWJjeS4gOS4quaVsCDlpKfkuo4g5ZCO5LiA5Liq5pWwIOWwseS6pOaNouS4pOaVsOS9jee9rgogICAgICAgICAgICAgICAgaWYgKC10b2tlbltpXSA+IC10b2tlbltpICsgMV0pIHsKICAgICAgICAgICAgICAgICAgdmFyIHRlbXAgPSB0b2tlbltpXTsKICAgICAgICAgICAgICAgICAgdG9rZW5baV0gPSB0b2tlbltpICsgMV07CiAgICAgICAgICAgICAgICAgIHRva2VuW2kgKyAxXSA9IHRlbXA7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICB0b2tlbls0XSA9IHJlcy5kYXRhLmRhdGFbMF0udXNlcklEOwogICAgICAgICAgICAgIHRva2VuID0gdG9rZW4uam9pbigiIik7CiAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgiaWQiLCB0b2tlbik7CgogICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICLnmbvlvZXmiJDlip8iLAogICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAogICAgICAgICAgICAgICAgb25DbG9zZTogZnVuY3Rpb24gb25DbG9zZSgpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAi6aaW6aG1IiwKICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgICAgIGlkOiAiMSIsCiAgICAgICAgICAgICAgICAgICAgICB0b2tlbjogdG9rZW4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["E:/vue/c_vue/src/views/login/login.js"],"names":["Axios","qs","data","loginForm","userName","passWord","loginFormRules","required","message","trigger","min","max","mounted","token","Date","getTime","split","splice","join","methods","login","formName","$refs","validate","valid","user","stringify","method","url","then","res","$message","type","num","i","length","temp","userID","sessionStorage","setItem","showClose","onClose","$router","push","name","params","id"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport qs from \"qs\";\r\n// import { log } from \"util\";\r\nexport default {\r\n  data() {\r\n    //let userVeri = function(rule,value,callback) {};\r\n    return {\r\n      loginForm: {\r\n        userName: \"admin\",\r\n        passWord: \"admin\"\r\n      },\r\n      loginFormRules: {\r\n        userName: [\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n          { min: 4, max: 16, message: \"长度在 3 到 16 个字符\", trigger: \"blur\" }\r\n        ],\r\n        passWord: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          { min: 3, max: 16, message: \"长度在 3 到 16 个字符\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    let token = \"\" + new Date().getTime();\r\n    token = token.split(\"\");\r\n    token.splice(5, 1, \"x\");\r\n    token = token.join(\"\");\r\n    //     var a = 'asdfsdfsdfsadf';\r\n    // a=a.split('')；  //将a字符串转换成数组\r\n    // a.splice(1,1,'xxxxx')； //将1这个位置的字符，替换成'xxxxx'. 用的是原生js的splice方法。\r\n    // console.log(a);   //结果是：\r\n    // [\"a\", \"xxxxx\", \"d\", \"f\", \"s\", \"d\", \"f\", \"s\", \"d\", \"f\", \"s\", \"a\", \"d\", \"f\"]\r\n\r\n    // a.join('');  //将数组转换成字符串。  完成。\r\n  },\r\n  methods: {\r\n    login(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          let user = qs.stringify({ user: this.loginForm.userName });\r\n          Axios({\r\n            method: \"post\",\r\n            url: \"http://localhost//php/login/login.php\",\r\n            data: user\r\n          }).then(res => {\r\n            if (res.data === 404) {\r\n              this.$message({\r\n                message: \"没有注册的用户\",\r\n                type: \"warning\"\r\n              });\r\n            } else {\r\n              let token = \"\" + new Date().getTime() + res.data.num;\r\n              token = token.split(\"\");\r\n              for (let i = 0; i < token.length - 1; i++) {\r\n                // 如果前一个数 大于 后一个数 就交换两数位置\r\n                if (-token[i] > -token[i + 1]) {\r\n                  let temp = token[i];\r\n                  token[i] = token[i + 1];\r\n                  token[i + 1] = temp;\r\n                }\r\n              }\r\n              token[4] = res.data.data[0].userID;\r\n              token = token.join(\"\");\r\n              sessionStorage.setItem(\"id\", token);\r\n              this.$message({\r\n                message: \"登录成功\",\r\n                type: \"success\",\r\n                showClose: true,\r\n                onClose: () => {\r\n                  this.$router.push({\r\n                    name: \"首页\",\r\n                    params: { id: \"1\", token }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n"]}]}